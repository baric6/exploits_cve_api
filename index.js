const express = require('express');
const cheerio = require('cheerio');
const axios = require('axios');

  
const app = express();
const PORT = 3000;

app.get('/', (req, res)=>{
    res.json("Welcome to root URL of Server");
});


// nvd
app.get('/nvd', (req, res)=>{
    res.json("please provide a page number /news/1");
});

app.get('/nvd/1', (req, res)=>{

    webData = []
    //////////////////////////////////////////////////////////////////
    axios.get('https://nvd.nist.gov/vuln/search/results?form_type=Basic&results_type=overview&search_type=all&isCpeNameSearch=false')
    .then(response =>{
        const html = response.data
        const $ = cheerio.load(html)
        $("tr", html).each((index, element) => {
            //console.log(element)
            if(index != 0){
                const title = $(element).find("th").text()
                const dis = $(element).find("p").text()
                const released = $(element).find("span").text().replace(/\t/g,"").split("\n")[0]

                const urlprefix = "https://nvd.nist.gov"
                const urlendfix = $(element).find("a").attr("href")
                const url = urlprefix + urlendfix

                cve = {
                    "title" : title,
                    "discription" : dis,
                    "released" : released,
                    "url" : url
                }
                webData.push(cve)
            }
            
        })
        res.json(webData)
    })
    ///////////////////////////////////////////////////////////////////
});

app.get('/nvd/2', (req, res)=>{

    webData = []
    //////////////////////////////////////////////////////////////////
    axios.get('https://nvd.nist.gov/vuln/search/results?isCpeNameSearch=false&results_type=overview&form_type=Basic&search_type=all&startIndex=20')
    .then(response =>{
        const html = response.data
        const $ = cheerio.load(html)
        $("tr", html).each((index, element) => {
            //console.log(element)
            if(index != 0){
                const title = $(element).find("th").text()
                const dis = $(element).find("p").text()
                const released = $(element).find("span").text().replace(/\t/g,"").split("\n")[0]

                const urlprefix = "https://nvd.nist.gov"
                const urlendfix = $(element).find("a").attr("href")
                const url = urlprefix + urlendfix

                cve = {
                    "title" : title,
                    "discription" : dis,
                    "released" : released,
                    "url" : url
                }
                webData.push(cve)
            }
            
        })
        res.json(webData)
    })
    ///////////////////////////////////////////////////////////////////
   
});

app.get('/nvd/3', (req, res)=>{

    webData = []
    //////////////////////////////////////////////////////////////////
    axios.get('https://nvd.nist.gov/vuln/search/results?isCpeNameSearch=false&results_type=overview&form_type=Basic&search_type=all&startIndex=40')
    .then(response =>{
        const html = response.data
        const $ = cheerio.load(html)
        $("tr", html).each((index, element) => {
            //console.log(element)
            if(index != 0){
                const title = $(element).find("th").text()
                const dis = $(element).find("p").text()
                const released = $(element).find("span").text().replace(/\t/g,"").split("\n")[0]

                const urlprefix = "https://nvd.nist.gov"
                const urlendfix = $(element).find("a").attr("href")
                const url = urlprefix + urlendfix

                cve = {
                    "title" : title,
                    "discription" : dis,
                    "released" : released,
                    "url" : url
                }
                webData.push(cve)
            }
            
        })
        res.json(webData)
    })
    ///////////////////////////////////////////////////////////////////
   
});
  
app.get('/nvd/4', (req, res)=>{

    webData = []
    //////////////////////////////////////////////////////////////////
    axios.get('https://nvd.nist.gov/vuln/search/results?isCpeNameSearch=false&results_type=overview&form_type=Basic&search_type=all&startIndex=60')
    .then(response =>{
        const html = response.data
        const $ = cheerio.load(html)
        $("tr", html).each((index, element) => {
            //console.log(element)
            if(index != 0){
                const title = $(element).find("th").text()
                const dis = $(element).find("p").text()
                const released = $(element).find("span").text().replace(/\t/g,"").split("\n")[0]

                const urlprefix = "https://nvd.nist.gov"
                const urlendfix = $(element).find("a").attr("href")
                const url = urlprefix + urlendfix

                cve = {
                    "title" : title,
                    "discription" : dis,
                    "released" : released,
                    "url" : url
                }
                webData.push(cve)
            }
            
        })
        res.json(webData)
    })
    ///////////////////////////////////////////////////////////////////
   
});

app.get('/nvd/5', (req, res)=>{

    webData = []
    //////////////////////////////////////////////////////////////////
    axios.get('https://nvd.nist.gov/vuln/search/results?isCpeNameSearch=false&results_type=overview&form_type=Basic&search_type=all&startIndex=80')
    .then(response =>{
        const html = response.data
        const $ = cheerio.load(html)
        $("tr", html).each((index, element) => {
            //console.log(element)
            if(index != 0){
                const title = $(element).find("th").text()
                const dis = $(element).find("p").text()
                const released = $(element).find("span").text().replace(/\t/g,"").split("\n")[0]

                const urlprefix = "https://nvd.nist.gov"
                const urlendfix = $(element).find("a").attr("href")
                const url = urlprefix + urlendfix

                cve = {
                    "title" : title,
                    "discription" : dis,
                    "released" : released,
                    "url" : url
                }
                webData.push(cve)
            }
            
        })
        res.json(webData)
    })
    ///////////////////////////////////////////////////////////////////
   
});
// end nvd


// exploits
app.get('/exploit', (req, res)=>{
    res.json("please provide a page number /exploit/1");
});

app.get('/exploit/1', (req, res)=>{
    webData = []
    axios.get('https://packetstormsecurity.com/files/tags/exploit/')
    .then(response =>{
        const html = response.data
        const $ = cheerio.load(html)
        $('.file').each((i, el) => {
            const cveQuickDis = $(el)
                .find('dt')
                .text();
            
            const cveLink = $(el)
                .find('dt')
                .find('a')
                .attr("href")
        
            const cvedate = $(el)
                .find('.datetime')
                .text();
            let date = cvedate.replace("Posted", "")

            const cvetag = $(el)
                .find('.tags')
                .text();
            let tagSpl = cvetag.split("|")

            cveNum = "N/A"
            const cve = $(el)
                .find('.cve')
                .text();
            if(cve != ""){
                let cveSpl = cve.split("|")
                cveNum = cveSpl[1]
            }
            
            const dlUrl = $(el)
                .find('.act-links')
                .find("a")
                .attr("href")

            const cveMd5 = $(el)
                .find('.md5')
                .find("code")
                .text()
            
            const cveDetail = $(el)
                .find('.detail')
                .text()

            exploit = {
                "exploitQuickDis" : cveQuickDis,
                "exploitUrl" : cveLink,
                "exploitDate" : date,
                "exploitTags" : tagSpl,
                "exploitName" : cveNum,
                "exploitDLurl" : dlUrl,
                "exploit" : cveMd5,
                "exploitDis" : cveDetail,
            }

            webData.push(exploit)
        })

        res.json(webData)
    })
    ///////////////////////////////////////////////////////////////////
});

app.get('/exploit/2', (req, res)=>{
    webData = []
    axios.get('https://packetstormsecurity.com/files/tags/exploit/page2/')
    .then(response =>{
        const html = response.data
        const $ = cheerio.load(html)
        $('.file').each((i, el) => {
            const cveQuickDis = $(el)
                .find('dt')
                .text();
            
            const cveLink = $(el)
                .find('dt')
                .find('a')
                .attr("href")
        
            const cvedate = $(el)
                .find('.datetime')
                .text();
            let date = cvedate.replace("Posted", "")

            const cvetag = $(el)
                .find('.tags')
                .text();
            let tagSpl = cvetag.split("|")

            cveNum = "N/A"
            const cve = $(el)
                .find('.cve')
                .text();
            if(cve != ""){
                let cveSpl = cve.split("|")
                cveNum = cveSpl[1]
            }
            
            const dlUrl = $(el)
                .find('.act-links')
                .find("a")
                .attr("href")

            const cveMd5 = $(el)
                .find('.md5')
                .find("code")
                .text()
            
            const cveDetail = $(el)
                .find('.detail')
                .text()

            exploit = {
                "exploitQuickDis" : cveQuickDis,
                "exploitUrl" : cveLink,
                "exploitDate" : date,
                "exploitTags" : tagSpl,
                "exploitName" : cveNum,
                "exploitDLurl" : dlUrl,
                "exploit" : cveMd5,
                "exploitDis" : cveDetail,
            }

            webData.push(exploit)
        })

        res.json(webData)
    })
    ///////////////////////////////////////////////////////////////////
});


app.get('/exploit/3', (req, res)=>{
    webData = []
    axios.get('https://packetstormsecurity.com/files/tags/exploit/page3/')
    .then(response =>{
        const html = response.data
        const $ = cheerio.load(html)
        $('.file').each((i, el) => {
            const cveQuickDis = $(el)
                .find('dt')
                .text();
            
            const cveLink = $(el)
                .find('dt')
                .find('a')
                .attr("href")
        
            const cvedate = $(el)
                .find('.datetime')
                .text();
            let date = cvedate.replace("Posted", "")

            const cvetag = $(el)
                .find('.tags')
                .text();
            let tagSpl = cvetag.split("|")

            cveNum = "N/A"
            const cve = $(el)
                .find('.cve')
                .text();
            if(cve != ""){
                let cveSpl = cve.split("|")
                cveNum = cveSpl[1]
            }
            
            const dlUrl = $(el)
                .find('.act-links')
                .find("a")
                .attr("href")

            const cveMd5 = $(el)
                .find('.md5')
                .find("code")
                .text()
            
            const cveDetail = $(el)
                .find('.detail')
                .text()

            exploit = {
                "exploitQuickDis" : cveQuickDis,
                "exploitUrl" : cveLink,
                "exploitDate" : date,
                "exploitTags" : tagSpl,
                "exploitName" : cveNum,
                "exploitDLurl" : dlUrl,
                "exploit" : cveMd5,
                "exploitDis" : cveDetail,
            }

            webData.push(exploit)
        })

        res.json(webData)
    })
    ///////////////////////////////////////////////////////////////////
});


app.get('/exploit/4', (req, res)=>{
    webData = []
    axios.get('https://packetstormsecurity.com/files/tags/exploit/page4/')
    .then(response =>{
        const html = response.data
        const $ = cheerio.load(html)
        $('.file').each((i, el) => {
            const cveQuickDis = $(el)
                .find('dt')
                .text();
            
            const cveLink = $(el)
                .find('dt')
                .find('a')
                .attr("href")
        
            const cvedate = $(el)
                .find('.datetime')
                .text();
            let date = cvedate.replace("Posted", "")

            const cvetag = $(el)
                .find('.tags')
                .text();
            let tagSpl = cvetag.split("|")

            cveNum = "N/A"
            const cve = $(el)
                .find('.cve')
                .text();
            if(cve != ""){
                let cveSpl = cve.split("|")
                cveNum = cveSpl[1]
            }
            
            const dlUrl = $(el)
                .find('.act-links')
                .find("a")
                .attr("href")

            const cveMd5 = $(el)
                .find('.md5')
                .find("code")
                .text()
            
            const cveDetail = $(el)
                .find('.detail')
                .text()

            exploit = {
                "exploitQuickDis" : cveQuickDis,
                "exploitUrl" : cveLink,
                "exploitDate" : date,
                "exploitTags" : tagSpl,
                "exploitName" : cveNum,
                "exploitDLurl" : dlUrl,
                "exploit" : cveMd5,
                "exploitDis" : cveDetail,
            }

            webData.push(exploit)
        })

        res.json(webData)
    })
    ///////////////////////////////////////////////////////////////////
});

app.get('/exploit/5', (req, res)=>{
    webData = []
    preappendUrl = "https://packetstormsecurity.com"
    axios.get('https://packetstormsecurity.com/files/tags/exploit/page5/')
    .then(response =>{
        const html = response.data
        const $ = cheerio.load(html)
        $('.file').each((i, el) => {
            const cveQuickDis = $(el)
                .find('dt')
                .text();
            
            const cveLink = $(el)
                .find('dt')
                .find('a')
                .attr("href")
        
            const cvedate = $(el)
                .find('.datetime')
                .text();
            let date = cvedate.replace("Posted", "")

            const cvetag = $(el)
                .find('.tags')
                .text();
            let tagSpl = cvetag.split("|")

            cveNum = "N/A"
            const cve = $(el)
                .find('.cve')
                .text();
            if(cve != ""){
                let cveSpl = cve.split("|")
                cveNum = cveSpl[1]
            }
            
            const dlUrl = $(el)
                .find('.act-links')
                .find("a")
                .attr("href")

            const cveMd5 = $(el)
                .find('.md5')
                .find("code")
                .text()
            
            const cveDetail = $(el)
                .find('.detail')
                .text()

            exploit = {
                "exploitQuickDis" : cveQuickDis,
                "exploitUrl" : cveLink,
                "exploitDate" : date,
                "exploitTags" : tagSpl,
                "exploitName" : cveNum,
                "exploitDLurl" : preappendUrl + dlUrl,
                "exploit" : cveMd5,
                "exploitDis" : cveDetail,
            }

            webData.push(exploit)
        })

        res.json(webData)
    })
    ///////////////////////////////////////////////////////////////////
});

app.listen(PORT, (error) =>{
    if(!error)
        console.log("Server is Successfully Running, and App is listening on port "+ PORT)
    else 
        console.log("Error occurred, server can't start", error);
    }
);